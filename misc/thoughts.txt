A good reference: https://blog.keyidentity.com/2017/07/25/pwnadventure3-hooking-shared-library/

Things I've learned:
- Using the simple LD_PRELOAD trick you can interpose:
	: Library calls (in the main executable and in any libraries)
	: A public call within the main executable
	: to properly interpose you need to: define a function pointer that can take an additional Object* this pointer at the beginning and call it as fcn_ptr(this,...)
- You cannot, however, interpose:
	: A private method call (because a private symbol will not marked as a dynamic symbol, since it can't be used in the main executable)
	: A call from within the library, because the compiler prefers the library version (uses relative addressing rather than plt), this is what a private method call is

======================
Pending Ideas (Random)
======================
- Page Lifecycle API in chrome
	: Page state is monitored by the application (in focus, etc.)
	: Though mobile devices have one active tab at a time, they still have separate render processes for tabs...
- verbose chromium output
	: Shows average latencies of certain functions, might give us more insight into how it's actually working
